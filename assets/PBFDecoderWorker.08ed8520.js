var y=Object.defineProperty,m=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var P=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable;var d=(r,e,t)=>e in r?y(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,c=(r,e)=>{for(var t in e||(e={}))P.call(e,t)&&d(r,t,e[t]);if(u)for(var t of u(e))C.call(e,t)&&d(r,t,e[t]);return r},p=(r,e)=>m(r,g(e));import{dF as b,ay as _,gf as G,t as v,b1 as M,ef as T,c2 as R,bX as x,gg as k,gh as A,gi as F}from"./vendor.4dd88096.js";class Z{constructor(e,t,s){this.uid=e,this.geometry=t,this.attributes=s,this.visible=!0,this.objectId=null,this.centroid=null}}class w{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}b();_();function L(r,e){return e}function h(r,e,t,s){switch(t){case 0:return a(r,e+s,0);case 1:return r.originPosition==="lowerLeft"?a(r,e+s,1):N(r,e+s,1)}}function f(r,e,t,s){return t===2?a(r,e,2):h(r,e,t,s)}function B(r,e,t,s){return t===2?a(r,e,3):h(r,e,t,s)}function I(r,e,t,s){return t===3?a(r,e,3):f(r,e,t,s)}function a({translate:r,scale:e},t,s){return r[s]+t*e[s]}function N({translate:r,scale:e},t,s){return r[s]-t*e[s]}class S{constructor(e){this.options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=L,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this._attributesConstructor=function(){}}createFeatureResult(){return new w}finishFeatureResult(e){if(this.options.applyTransform&&(e.transform=null),this._attributesConstructor=function(){},this.coordinateBuffer=null,this.lengths.length=0,!e.hasZ)return;const t=G(e.geometryType,this.options.sourceSpatialReference,e.spatialReference);if(!v(t))for(const s of e.features)t(s.geometry)}createSpatialReference(){return new M}addField(e,t){e.fields.push(T.fromJSON(t));const s=e.fields.map(i=>i.name);this._attributesConstructor=function(){for(const i of s)this[i]=null}}addFeature(e,t){const s=this.options.maxStringAttributeLength?this.options.maxStringAttributeLength:0;if(s>0)for(const i in t.attributes){const o=t.attributes[i];typeof o=="string"&&o.length>s&&(t.attributes[i]="")}e.features.push(t)}addQueryGeometry(e,t){const{queryGeometry:s,queryGeometryType:i}=t,o=R(s.clone(),s,!1,!1,this.transform),l=x(o,i,!1,!1);let n=null;switch(i){case"esriGeometryPoint":n="point";break;case"esriGeometryPolygon":n="polygon";break;case"esriGeometryPolyline":n="polyline";break;case"esriGeometryMultipoint":n="multipoint"}l.type=n,e.queryGeometryType=i,e.queryGeometry=l}prepareFeatures(e){switch(this.transform=e.transform,this.options.applyTransform&&e.transform&&(this.applyTransform=this._deriveApplyTransform(e)),this.vertexDimension=2,e.hasZ&&this.vertexDimension++,e.hasM&&this.vertexDimension++,e.geometryType){case"point":this.addCoordinate=(t,s,i)=>this.addCoordinatePoint(t,s,i),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,s,i)=>this._addCoordinatePolygon(t,s,i),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,s,i)=>this._addCoordinatePolyline(t,s,i),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,s,i)=>this._addCoordinateMultipoint(t,s,i),this.createGeometry=t=>this._createMultipointGeometry(t);break;case"mesh":case"extent":break;default:k(e.geometryType)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,new Z(A(),null,new this._attributesConstructor)}allocateCoordinates(){const e=this.lengths.reduce((t,s)=>t+s,0);this.coordinateBuffer=new Float64Array(e*this.vertexDimension),this.coordinateBufferPtr=0}addLength(e,t,s){this.lengths.length===0&&(this.toAddInCurrentPath=t),this.lengths.push(t)}createPointGeometry(e){const t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,s){switch(t=this.applyTransform(this.transform,t,s,0),s){case 0:e.x=t;break;case 1:e.y=t;break;case 2:e.hasZ?e.z=t:e.m=t;break;case 3:e.m=t}}_transformPathLikeValue(e,t){let s=0;return t<=1&&(s=this.previousCoordinate[t],this.previousCoordinate[t]+=e),this.applyTransform(this.transform,e,t,s)}_addCoordinatePolyline(e,t,s){this._dehydratedAddPointsCoordinate(e.paths,t,s)}_addCoordinatePolygon(e,t,s){this._dehydratedAddPointsCoordinate(e.rings,t,s)}_addCoordinateMultipoint(e,t,s){s===0&&e.points.push([]);const i=this._transformPathLikeValue(t,s);e.points[e.points.length-1].push(i)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,s){s===0&&this.toAddInCurrentPath--==0&&(e.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const i=this._transformPathLikeValue(t,s),o=e[e.length-1];s===0&&o.push(new Float64Array(this.coordinateBuffer.buffer,this.coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT,this.vertexDimension)),this.coordinateBuffer[this.coordinateBufferPtr++]=i}_deriveApplyTransform(e){const{hasZ:t,hasM:s}=e;return t&&s?I:t?f:s?B:h}}class D{_parseFeatureQuery(e){const t=F(e.buffer,new S(e.options)),s=p(c({},t),{spatialReference:t.spatialReference.toJSON(),fields:t.fields?t.fields.map(i=>i.toJSON()):void 0});return Promise.resolve(s)}}function $(){return new D}export{$ as default};
